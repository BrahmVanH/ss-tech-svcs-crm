/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n\tmutation CreateUser($input: CreateUserInput!) {\n\t\tcreateUser(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n": types.CreateUserDocument,
    "\n\tmutation UpdateUserFirstName($input: UpdateUserFirstNameInput!) {\n\t\tupdateUserFirstName(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n": types.UpdateUserFirstNameDocument,
    "\n\tmutation UpdateUserLastName($input: UpdateUserLastNameInput!) {\n\t\tupdateUserLastName(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n": types.UpdateUserLastNameDocument,
    "\n\tmutation UpdateUserUsername($input: UpdateUserUsernameInput!) {\n\t\tupdateUserUsername(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n": types.UpdateUserUsernameDocument,
    "\n\tmutation UpdateUserPassword($input: UpdateUserPasswordInput!) {\n\t\tupdateUserPassword(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n": types.UpdateUserPasswordDocument,
    "\n\tmutation UpdateUserPin($input: UpdateUserPinInput!) {\n\t\tupdateUserPin(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n": types.UpdateUserPinDocument,
    "\n\tmutation LoginUser($input: LoginUserInput!) {\n\t\tloginUser(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n": types.LoginUserDocument,
    "\n\tmutation removeUser($input: RemoveUserInput!) {\n\t\tremoveUser(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n": types.RemoveUserDocument,
    "\n\tmutation CreateCustomer($input: CreateCustomerInput!) {\n\t\tcreateCustomer(input: $input) {\n\t\t\t_id\n\t\t\tcreatedAt\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tphone\n\t\t\tbusinessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tpropertyId\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n": types.CreateCustomerDocument,
    "\n\tmutation UpdateCustomerFirstName($input: UpdateCustomerFirstNameInput!) {\n\t\tupdateCustomerFirstName(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\tfirstName\n\t\t\t# lastName\n\t\t\t# email\n\t\t\t# phone\n\t\t\t# businessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tpropertyId\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n": types.UpdateCustomerFirstNameDocument,
    "\n\tmutation UpdateCustomerLastName($input: UpdateCustomerLastNameInput!) {\n\t\tupdateCustomerLastName(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\t# firstName\n\t\t\tlastName\n\t\t\t# email\n\t\t\t# phone\n\t\t\t# businessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n": types.UpdateCustomerLastNameDocument,
    "\n\tmutation UpdateCustomerEmail($input: UpdateCustomerEmailInput!) {\n\t\tupdateCustomerEmail(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\t# firstName\n\t\t\t# lastName\n\t\t\temail\n\t\t\t# phone\n\t\t\t# businessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tcustomerId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n": types.UpdateCustomerEmailDocument,
    "\n\tmutation UpdateCustomerPhone($input: UpdateCustomerPhoneInput!) {\n\t\tupdateCustomerPhone(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\t# firstName\n\t\t\t# lastName\n\t\t\t# email\n\t\t\tphone\n\t\t\t# businessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tcustomerId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n": types.UpdateCustomerPhoneDocument,
    "\n\tmutation UpdateCustomerBusinessName($input: UpdateCustomerBusinessNameInput!) {\n\t\tupdateCustomerBusinessName(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\t# firstName\n\t\t\t# lastName\n\t\t\t# email\n\t\t\t# phone\n\t\t\tbusinessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tcustomerId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n": types.UpdateCustomerBusinessNameDocument,
    "\n\tmutation UpdateCustomerProperties($input: UpdateCustomerPropertiesInput!) {\n\t\tupdateCustomerProperties(input: $input) {\n\t\t\t_id\n\t\t\n\t\t}\n\t}\n": types.UpdateCustomerPropertiesDocument,
    "\n\tmutation deleteCustomer($input: RemoveCustomerInput!) {\n\t\tdeleteCustomer(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tphone\n\t\t\tbusinessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tcustomerId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n": types.DeleteCustomerDocument,
    "\n\tmutation CreateProperty($input: CreatePropertyInput!) {\n\t\tcreateProperty(input: $input) {\n\t\t\t_id\n\t\t\tpropertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n": types.CreatePropertyDocument,
    "\n\tmutation UpdatePropertyName($input: UpdatePropertyNameInput!) {\n\t\tupdatePropertyName(input: $input) {\n\t\t\t_id\n\t\t\tpropertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n": types.UpdatePropertyNameDocument,
    "\n\tmutation UpdatePropertyAddress($input: UpdatePropertyAddressInput!) {\n\t\tupdatePropertyAddress(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\tpropertyAddress {\n\t\t\t\tstreet\n\t\t\t\tunit\n\t\t\t\tcity\n\t\t\t\tstate\n\t\t\t\tzip\n\t\t\t\tcountry\n\t\t\t}\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n": types.UpdatePropertyAddressDocument,
    "\n\tmutation UpdatePropertyDescription($input: UpdatePropertyDescriptionInput!) {\n\t\tupdatePropertyDescription(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\tpropertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n": types.UpdatePropertyDescriptionDocument,
    "\n\tmutation UpdatePropertyAgent($input: UpdatePropertyAgentInput!) {\n\t\tupdatePropertyAgent(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\tagent {\n\t\t\t\t_id\n\t\t\t}\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n": types.UpdatePropertyAgentDocument,
    "\n\tmutation UpdatePropertyS3FolderKey($input: UpdatePropertyS3FolderKeyInput!) {\n\t\tupdatePropertyS3FolderKey(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\ts3FolderKey\n\t\t}\n\t}\n": types.UpdatePropertyS3FolderKeyDocument,
    "\n\tmutation deleteProperty($input: RemovePropertyInput!) {\n\t\tdeleteProperty(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n": types.DeletePropertyDocument,
    "\n\tmutation CreateWorkOrder($input: CreateWorkOrderInput!) {\n\t\tcreateWorkOrder(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n": types.CreateWorkOrderDocument,
    "\n\tmutation UpdateWorkOrderDate($input: UpdateWorkOrderDateInput!) {\n\t\tupdateWorkOrderDate(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n": types.UpdateWorkOrderDateDocument,
    "\n\tmutation UpdateWorkOrderCustomerId($input: UpdateWorkOrderCustomerIdInput!) {\n\t\tupdateWorkOrderCustomerId(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t}\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n": types.UpdateWorkOrderCustomerIdDocument,
    "\n\tmutation UpdateWorkOrderPropertyId($input: UpdateWorkOrderPropertyIdInput!) {\n\t\tupdateWorkOrderPropertyId(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t}\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n": types.UpdateWorkOrderPropertyIdDocument,
    "\n\tmutation UpdateWorkOrderType($input: UpdateWorkOrderTypeInput!) {\n\t\tupdateWorkOrderType(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\ttype\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n": types.UpdateWorkOrderTypeDocument,
    "\n\tmutation UpdateWorkOrderDescription($input: UpdateWorkOrderDescriptionInput!) {\n\t\tupdateWorkOrderDescription(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\tdescription\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n": types.UpdateWorkOrderDescriptionDocument,
    "\n\tmutation UpdateWorkOrderQuote($input: UpdateWorkOrderQuoteInput!) {\n\t\tupdateWorkOrderQuote(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\tquote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n": types.UpdateWorkOrderQuoteDocument,
    "\n\tmutation UpdateWorkOrderCompletedBy($input: UpdateWorkOrderCompletedByInput!) {\n\t\tupdateWorkOrderCompletedBy(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\tcompletedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n": types.UpdateWorkOrderCompletedByDocument,
    "\n\tmutation UpdateWorkOrderTotal($input: UpdateWorkOrderTotalInput!) {\n\t\tupdateWorkOrderTotal(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\ttotal\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n": types.UpdateWorkOrderTotalDocument,
    "\n\tmutation UpdateWorkOrderCharged($input: UpdateWorkOrderChargedInput!) {\n\t\tupdateWorkOrderCharged(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\tcharged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n": types.UpdateWorkOrderChargedDocument,
    "\n\tmutation UpdateWorkOrderPaid($input: UpdateWorkOrderPaidInput!) {\n\t\tupdateWorkOrderPaid(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\tpaid\n\t\t\t# comments\n\t\t}\n\t}\n": types.UpdateWorkOrderPaidDocument,
    "\n\tmutation UpdateWorkOrderComments($input: UpdateWorkOrderCommentsInput!) {\n\t\tupdateWorkOrderComments(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\tcomments\n\t\t}\n\t}\n": types.UpdateWorkOrderCommentsDocument,
    "\n\tmutation deleteWorkOrder($input: RemoveWorkOrderInput!) {\n\t\tdeleteWorkOrder(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n": types.DeleteWorkOrderDocument,
    "\n\tmutation CreateInvoice($input: CreateInvoiceInput!) {\n\t\tcreateInvoice(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n": types.CreateInvoiceDocument,
    "\n\tmutation UpdateInvoiceDate($input: UpdateInvoiceDateInput!) {\n\t\tupdateInvoiceDate(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n": types.UpdateInvoiceDateDocument,
    "\n\tmutation UpdateInvoiceCustomerId($input: UpdateInvoiceCustomerIdInput!) {\n\t\tupdateInvoiceCustomerId(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n": types.UpdateInvoiceCustomerIdDocument,
    "\n\tmutation UpdateInvoiceWorkOrders($input: UpdateInvoiceWorkOrdersInput!) {\n\t\tupdateInvoiceWorkOrders(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n": types.UpdateInvoiceWorkOrdersDocument,
    "\n\tmutation UpdateInvoiceQuote($input: UpdateInvoiceQuoteInput!) {\n\t\tupdateInvoiceQuote(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n": types.UpdateInvoiceQuoteDocument,
    "\n\tmutation UpdateInvoiceTotal($input: UpdateInvoiceTotalInput!) {\n\t\tupdateInvoiceTotal(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n": types.UpdateInvoiceTotalDocument,
    "\n\tmutation UpdateInvoiceCharged($input: UpdateInvoiceChargedInput!) {\n\t\tupdateInvoiceCharged(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n": types.UpdateInvoiceChargedDocument,
    "\n\tmutation UpdateInvoicePaid($input: UpdateInvoicePaidInput!) {\n\t\tupdateInvoicePaid(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n": types.UpdateInvoicePaidDocument,
    "\n\tmutation deleteInvoice($input: RemoveInvoiceInput!) {\n\t\tdeleteInvoice(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n": types.DeleteInvoiceDocument,
    "\n\tmutation DeleteS3Objects($input: DeleteS3ObjectInput!) {\n\t\tdeleteS3Objects(input: $input) {\n\t\t\tstatus\n\t\t\tmessage\n\t\t}\n\t}\n": types.DeleteS3ObjectsDocument,
    "\n\tquery GetAllUsers {\n\t\tgetAllUsers {\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tusername\n\t\t}\n\t}\n": types.GetAllUsersDocument,
    "\n\tquery QueryCustomers {\n\t\tqueryCustomers {\n\t\t\t_id\n\t\t\tcreatedAt\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tphone\n\t\t\tbusinessName\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\t# date\n\t\t\t\t# type\n\t\t\t\t# charged\n\t\t\t\t# paid\n\t\t\t}\n\t\t\tinvoices {\n\t\t\t\t_id\n\t\t\t}\n\t\t\tproperties {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t}\n\t\t}\n\t}\n": types.QueryCustomersDocument,
    "\n\tquery QueryCustomerById($customerId: ID!) {\n\t\tqueryCustomerById(customerId: $customerId) {\n\t\t\t_id\n\t\t\tcreatedAt\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tphone\n\t\t\tbusinessName\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\tdate\n\t\t\t\tpropertyId {\n\t\t\t\t\t_id\n\t\t\t\t\tpropertyName\n\t\t\t\t\tpropertyAddress {\n\t\t\t\t\t\tstreet\n\t\t\t\t\t\tcity\n\t\t\t\t\t\tstate\n\t\t\t\t\t\tzip\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttype\n\t\t\t\tcharged\n\t\t\t\tpaid\n\t\t\t}\n\t\t}\n\t}\n": types.QueryCustomerByIdDocument,
    "\n\tquery QueryProperties {\n\t\tqueryProperties {\n\t\t\t_id\n\t\t\tpropertyName\n\t\t\tpropertyAddress {\n\t\t\t\tstreet\n\t\t\t\tcity\n\t\t\t\tstate\n\t\t\t\tzip\n\t\t\t}\n\t\t\tpropertyDescription\n\t\t\tagent {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tphone\n\t\t\t}\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n": types.QueryPropertiesDocument,
    "\n\tquery QueryPropertyById($propertyId: ID!) {\n\t\tqueryPropertyById(propertyId: $propertyId) {\n\t\t\t_id\n\t\t\tpropertyName\n\t\t\tpropertyAddress {\n\t\t\t\tstreet\n\t\t\t\tcity\n\t\t\t\tstate\n\t\t\t\tzip\n\t\t\t}\n\t\t\tpropertyDescription\n\t\t\tagent {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tphone\n\t\t\t}\n\t\t\ts3FolderKey\n\t\t}\n\t}\n": types.QueryPropertyByIdDocument,
    "\n\tquery QueryWorkOrders {\n\t\tqueryWorkOrders {\n\t\t\t_id\n\t\t\tinvoices {\n\t\t\t\t_id\n\t\t\t}\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t}\n\t\t\tcharged\n\t\t\tcomments\n\t\t\tcompletedBy\n\t\t\tdate\n\t\t\tdescription\n\t\t\tlastUpdated\n\t\t\tpaid\n\t\t\tquote\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t\tpropertyAddress {\n\t\t\t\t\tstreet\n\t\t\t\t\tcity\n\t\t\t\t\tstate\n\t\t\t\t\tzip\n\t\t\t\t}\n\n\t\t\t}\n\t\t\ttotal\n\t\t\ttype\n\t\t}\n\t}\n": types.QueryWorkOrdersDocument,
    "\n\tquery QueryWorkOrderById($workOrderId: ID!) {\n\t\tqueryWorkOrderById(workOrderId: $workOrderId) {\n\t\t\t_id\n\t\t\tdate\n\t\t\tlastUpdated\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t\tpropertyAddress {\n\t\t\t\t\tstreet\n\t\t\t\t\tcity\n\t\t\t\t\tstate\n\t\t\t\t\tzip\n\t\t\t\t}\n\t\t\t\tpropertyDescription\n\t\t\t\tagent {\n\t\t\t\t\t_id\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t\ts3FolderKey\n\t\t\t}\n\t\t\ttype\n\t\t\tdescription\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t\tcomments\n\t\t}\n\t}\n": types.QueryWorkOrderByIdDocument,
    "\n\tquery QueryWorkOrdersByCustomer($customerId: ID!) {\n\t\tqueryWorkOrdersByCustomer(customerId: $customerId) {\n\t\t\t_id\n\t\t\tdate\n\t\t\tlastUpdated\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t\tpropertyAddress {\n\t\t\t\t\tstreet\n\t\t\t\t\tcity\n\t\t\t\t\tstate\n\t\t\t\t\tzip\n\t\t\t\t}\n\t\t\t\tpropertyDescription\n\t\t\t\tagent {\n\t\t\t\t\t_id\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t\ts3FolderKey\n\t\t\t}\n\t\t\ttype\n\t\t\tdescription\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t\tcomments\n\t\t}\n\t}\n": types.QueryWorkOrdersByCustomerDocument,
    "\n\tquery QueryWorkOrdersByProperty($propertyId: ID!) {\n\t\tqueryWorkOrdersByProperty(propertyId: $propertyId) {\n\t\t\t_id\n\t\t\tdate\n\t\t\tlastUpdated\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t\tpropertyAddress {\n\t\t\t\t\tstreet\n\t\t\t\t\tcity\n\t\t\t\t\tstate\n\t\t\t\t\tzip\n\t\t\t\t}\n\t\t\t\tpropertyDescription\n\t\t\t\tagent {\n\t\t\t\t\t_id\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t\ts3FolderKey\n\t\t\t}\n\t\t\ttype\n\t\t\tdescription\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t\tcomments\n\t\t}\n\t}\n": types.QueryWorkOrdersByPropertyDocument,
    "\n\tquery QueryInvoices {\n\t\tqueryInvoices {\n\t\t\t_id\n\t\t\tinvoiceNumber\n\t\t\tdate\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\t# firstName\n\t\t\t\t# lastName\n\t\t\t\t# email\n\t\t\t\t# phone\n\t\t\t\t# businessName\n\t\t\t}\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\t# date\n\t\t\t\t# type\n\t\t\t}\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t}\n\t}\n": types.QueryInvoicesDocument,
    "\n\tquery QueryInvoiceById($invoiceId: ID!) {\n\t\tqueryInvoiceById(invoiceId: $invoiceId) {\n\t\t\t_id\n\t\t\tinvoiceNumber\n\t\t\tdate\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\tdate\n\t\t\t\ttype\n\t\t\t}\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t}\n\t}\n": types.QueryInvoiceByIdDocument,
    "\n\tquery QueryInvoicesByCustomer($customerId: ID!) {\n\t\tqueryInvoicesByCustomer(customerId: $customerId) {\n\t\t\t_id\n\t\t\tinvoiceNumber\n\t\t\tdate\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\tdate\n\t\t\t\ttype\n\t\t\t}\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t}\n\t}\n": types.QueryInvoicesByCustomerDocument,
    "\n\tquery QueryInvoicesByWorkOrder($workOrderId: ID!) {\n\t\tqueryInvoicesByWorkOrder(workOrderId: $workOrderId) {\n\t\t\t_id\n\t\t\tinvoiceNumber\n\t\t\tdate\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\tdate\n\t\t\t\ttype\n\t\t\t}\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t}\n\t}\n": types.QueryInvoicesByWorkOrderDocument,
    "\n\tquery GetPresignedS3Url($imgKey: String!, $commandType: String!, $altTag: String!) {\n\t\tgetPresignedS3Url(imgKey: $imgKey, commandType: $commandType, altTag: $altTag)\n\t}\n": types.GetPresignedS3UrlDocument,
};

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function gql(source: string): unknown;

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateUser($input: CreateUserInput!) {\n\t\tcreateUser(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateUser($input: CreateUserInput!) {\n\t\tcreateUser(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateUserFirstName($input: UpdateUserFirstNameInput!) {\n\t\tupdateUserFirstName(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateUserFirstName($input: UpdateUserFirstNameInput!) {\n\t\tupdateUserFirstName(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateUserLastName($input: UpdateUserLastNameInput!) {\n\t\tupdateUserLastName(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateUserLastName($input: UpdateUserLastNameInput!) {\n\t\tupdateUserLastName(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateUserUsername($input: UpdateUserUsernameInput!) {\n\t\tupdateUserUsername(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateUserUsername($input: UpdateUserUsernameInput!) {\n\t\tupdateUserUsername(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateUserPassword($input: UpdateUserPasswordInput!) {\n\t\tupdateUserPassword(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateUserPassword($input: UpdateUserPasswordInput!) {\n\t\tupdateUserPassword(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateUserPin($input: UpdateUserPinInput!) {\n\t\tupdateUserPin(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateUserPin($input: UpdateUserPinInput!) {\n\t\tupdateUserPin(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation LoginUser($input: LoginUserInput!) {\n\t\tloginUser(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation LoginUser($input: LoginUserInput!) {\n\t\tloginUser(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation removeUser($input: RemoveUserInput!) {\n\t\tremoveUser(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation removeUser($input: RemoveUserInput!) {\n\t\tremoveUser(input: $input) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateCustomer($input: CreateCustomerInput!) {\n\t\tcreateCustomer(input: $input) {\n\t\t\t_id\n\t\t\tcreatedAt\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tphone\n\t\t\tbusinessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tpropertyId\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateCustomer($input: CreateCustomerInput!) {\n\t\tcreateCustomer(input: $input) {\n\t\t\t_id\n\t\t\tcreatedAt\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tphone\n\t\t\tbusinessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tpropertyId\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateCustomerFirstName($input: UpdateCustomerFirstNameInput!) {\n\t\tupdateCustomerFirstName(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\tfirstName\n\t\t\t# lastName\n\t\t\t# email\n\t\t\t# phone\n\t\t\t# businessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tpropertyId\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateCustomerFirstName($input: UpdateCustomerFirstNameInput!) {\n\t\tupdateCustomerFirstName(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\tfirstName\n\t\t\t# lastName\n\t\t\t# email\n\t\t\t# phone\n\t\t\t# businessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tpropertyId\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateCustomerLastName($input: UpdateCustomerLastNameInput!) {\n\t\tupdateCustomerLastName(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\t# firstName\n\t\t\tlastName\n\t\t\t# email\n\t\t\t# phone\n\t\t\t# businessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateCustomerLastName($input: UpdateCustomerLastNameInput!) {\n\t\tupdateCustomerLastName(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\t# firstName\n\t\t\tlastName\n\t\t\t# email\n\t\t\t# phone\n\t\t\t# businessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateCustomerEmail($input: UpdateCustomerEmailInput!) {\n\t\tupdateCustomerEmail(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\t# firstName\n\t\t\t# lastName\n\t\t\temail\n\t\t\t# phone\n\t\t\t# businessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tcustomerId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateCustomerEmail($input: UpdateCustomerEmailInput!) {\n\t\tupdateCustomerEmail(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\t# firstName\n\t\t\t# lastName\n\t\t\temail\n\t\t\t# phone\n\t\t\t# businessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tcustomerId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateCustomerPhone($input: UpdateCustomerPhoneInput!) {\n\t\tupdateCustomerPhone(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\t# firstName\n\t\t\t# lastName\n\t\t\t# email\n\t\t\tphone\n\t\t\t# businessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tcustomerId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateCustomerPhone($input: UpdateCustomerPhoneInput!) {\n\t\tupdateCustomerPhone(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\t# firstName\n\t\t\t# lastName\n\t\t\t# email\n\t\t\tphone\n\t\t\t# businessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tcustomerId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateCustomerBusinessName($input: UpdateCustomerBusinessNameInput!) {\n\t\tupdateCustomerBusinessName(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\t# firstName\n\t\t\t# lastName\n\t\t\t# email\n\t\t\t# phone\n\t\t\tbusinessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tcustomerId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateCustomerBusinessName($input: UpdateCustomerBusinessNameInput!) {\n\t\tupdateCustomerBusinessName(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\t# firstName\n\t\t\t# lastName\n\t\t\t# email\n\t\t\t# phone\n\t\t\tbusinessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tcustomerId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateCustomerProperties($input: UpdateCustomerPropertiesInput!) {\n\t\tupdateCustomerProperties(input: $input) {\n\t\t\t_id\n\t\t\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateCustomerProperties($input: UpdateCustomerPropertiesInput!) {\n\t\tupdateCustomerProperties(input: $input) {\n\t\t\t_id\n\t\t\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation deleteCustomer($input: RemoveCustomerInput!) {\n\t\tdeleteCustomer(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tphone\n\t\t\tbusinessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tcustomerId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation deleteCustomer($input: RemoveCustomerInput!) {\n\t\tdeleteCustomer(input: $input) {\n\t\t\t_id\n\t\t\t# createdAt\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tphone\n\t\t\tbusinessName\n\t\t\t# workOrders {\n\t\t\t# \t_id\n\t\t\t# \tdate\n\t\t\t# \tcustomerId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \tpropertyId {\n\t\t\t# \t\t_id\n\t\t\t# \t}\n\t\t\t# \ttype\n\t\t\t# \tdescription\n\t\t\t# \ttotal\n\t\t\t# \tquote\n\t\t\t# \tcharged\n\t\t\t# \tpaid\n\t\t\t# }\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateProperty($input: CreatePropertyInput!) {\n\t\tcreateProperty(input: $input) {\n\t\t\t_id\n\t\t\tpropertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateProperty($input: CreatePropertyInput!) {\n\t\tcreateProperty(input: $input) {\n\t\t\t_id\n\t\t\tpropertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdatePropertyName($input: UpdatePropertyNameInput!) {\n\t\tupdatePropertyName(input: $input) {\n\t\t\t_id\n\t\t\tpropertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdatePropertyName($input: UpdatePropertyNameInput!) {\n\t\tupdatePropertyName(input: $input) {\n\t\t\t_id\n\t\t\tpropertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdatePropertyAddress($input: UpdatePropertyAddressInput!) {\n\t\tupdatePropertyAddress(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\tpropertyAddress {\n\t\t\t\tstreet\n\t\t\t\tunit\n\t\t\t\tcity\n\t\t\t\tstate\n\t\t\t\tzip\n\t\t\t\tcountry\n\t\t\t}\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdatePropertyAddress($input: UpdatePropertyAddressInput!) {\n\t\tupdatePropertyAddress(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\tpropertyAddress {\n\t\t\t\tstreet\n\t\t\t\tunit\n\t\t\t\tcity\n\t\t\t\tstate\n\t\t\t\tzip\n\t\t\t\tcountry\n\t\t\t}\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdatePropertyDescription($input: UpdatePropertyDescriptionInput!) {\n\t\tupdatePropertyDescription(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\tpropertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdatePropertyDescription($input: UpdatePropertyDescriptionInput!) {\n\t\tupdatePropertyDescription(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\tpropertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdatePropertyAgent($input: UpdatePropertyAgentInput!) {\n\t\tupdatePropertyAgent(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\tagent {\n\t\t\t\t_id\n\t\t\t}\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdatePropertyAgent($input: UpdatePropertyAgentInput!) {\n\t\tupdatePropertyAgent(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\tagent {\n\t\t\t\t_id\n\t\t\t}\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdatePropertyS3FolderKey($input: UpdatePropertyS3FolderKeyInput!) {\n\t\tupdatePropertyS3FolderKey(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\ts3FolderKey\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdatePropertyS3FolderKey($input: UpdatePropertyS3FolderKeyInput!) {\n\t\tupdatePropertyS3FolderKey(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\ts3FolderKey\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation deleteProperty($input: RemovePropertyInput!) {\n\t\tdeleteProperty(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation deleteProperty($input: RemovePropertyInput!) {\n\t\tdeleteProperty(input: $input) {\n\t\t\t_id\n\t\t\t# propertyName\n\t\t\t# propertyAddress {\n\t\t\t# \tstreet\n\t\t\t# \tunit\n\t\t\t# \tcity\n\t\t\t# \tstate\n\t\t\t# \tzip\n\t\t\t# \tcountry\n\t\t\t# }\n\t\t\t# propertyDescription\n\t\t\t# agent\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateWorkOrder($input: CreateWorkOrderInput!) {\n\t\tcreateWorkOrder(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateWorkOrder($input: CreateWorkOrderInput!) {\n\t\tcreateWorkOrder(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateWorkOrderDate($input: UpdateWorkOrderDateInput!) {\n\t\tupdateWorkOrderDate(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateWorkOrderDate($input: UpdateWorkOrderDateInput!) {\n\t\tupdateWorkOrderDate(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateWorkOrderCustomerId($input: UpdateWorkOrderCustomerIdInput!) {\n\t\tupdateWorkOrderCustomerId(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t}\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateWorkOrderCustomerId($input: UpdateWorkOrderCustomerIdInput!) {\n\t\tupdateWorkOrderCustomerId(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t}\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateWorkOrderPropertyId($input: UpdateWorkOrderPropertyIdInput!) {\n\t\tupdateWorkOrderPropertyId(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t}\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateWorkOrderPropertyId($input: UpdateWorkOrderPropertyIdInput!) {\n\t\tupdateWorkOrderPropertyId(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t}\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateWorkOrderType($input: UpdateWorkOrderTypeInput!) {\n\t\tupdateWorkOrderType(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\ttype\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateWorkOrderType($input: UpdateWorkOrderTypeInput!) {\n\t\tupdateWorkOrderType(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\ttype\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateWorkOrderDescription($input: UpdateWorkOrderDescriptionInput!) {\n\t\tupdateWorkOrderDescription(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\tdescription\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateWorkOrderDescription($input: UpdateWorkOrderDescriptionInput!) {\n\t\tupdateWorkOrderDescription(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\tdescription\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateWorkOrderQuote($input: UpdateWorkOrderQuoteInput!) {\n\t\tupdateWorkOrderQuote(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\tquote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateWorkOrderQuote($input: UpdateWorkOrderQuoteInput!) {\n\t\tupdateWorkOrderQuote(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\tquote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateWorkOrderCompletedBy($input: UpdateWorkOrderCompletedByInput!) {\n\t\tupdateWorkOrderCompletedBy(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\tcompletedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateWorkOrderCompletedBy($input: UpdateWorkOrderCompletedByInput!) {\n\t\tupdateWorkOrderCompletedBy(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\tcompletedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateWorkOrderTotal($input: UpdateWorkOrderTotalInput!) {\n\t\tupdateWorkOrderTotal(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\ttotal\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateWorkOrderTotal($input: UpdateWorkOrderTotalInput!) {\n\t\tupdateWorkOrderTotal(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\ttotal\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateWorkOrderCharged($input: UpdateWorkOrderChargedInput!) {\n\t\tupdateWorkOrderCharged(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\tcharged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateWorkOrderCharged($input: UpdateWorkOrderChargedInput!) {\n\t\tupdateWorkOrderCharged(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\tcharged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateWorkOrderPaid($input: UpdateWorkOrderPaidInput!) {\n\t\tupdateWorkOrderPaid(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\tpaid\n\t\t\t# comments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateWorkOrderPaid($input: UpdateWorkOrderPaidInput!) {\n\t\tupdateWorkOrderPaid(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\tpaid\n\t\t\t# comments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateWorkOrderComments($input: UpdateWorkOrderCommentsInput!) {\n\t\tupdateWorkOrderComments(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\tcomments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateWorkOrderComments($input: UpdateWorkOrderCommentsInput!) {\n\t\tupdateWorkOrderComments(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\tcomments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation deleteWorkOrder($input: RemoveWorkOrderInput!) {\n\t\tdeleteWorkOrder(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation deleteWorkOrder($input: RemoveWorkOrderInput!) {\n\t\tdeleteWorkOrder(input: $input) {\n\t\t\t_id\n\t\t\t# date\n\t\t\t# customerId\n\t\t\t# propertyId\n\t\t\t# type\n\t\t\t# description\n\t\t\t# completedBy\n\t\t\t# quote\n\t\t\t# total\n\t\t\t# charged\n\t\t\t# paid\n\t\t\t# comments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation CreateInvoice($input: CreateInvoiceInput!) {\n\t\tcreateInvoice(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation CreateInvoice($input: CreateInvoiceInput!) {\n\t\tcreateInvoice(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateInvoiceDate($input: UpdateInvoiceDateInput!) {\n\t\tupdateInvoiceDate(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateInvoiceDate($input: UpdateInvoiceDateInput!) {\n\t\tupdateInvoiceDate(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateInvoiceCustomerId($input: UpdateInvoiceCustomerIdInput!) {\n\t\tupdateInvoiceCustomerId(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateInvoiceCustomerId($input: UpdateInvoiceCustomerIdInput!) {\n\t\tupdateInvoiceCustomerId(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateInvoiceWorkOrders($input: UpdateInvoiceWorkOrdersInput!) {\n\t\tupdateInvoiceWorkOrders(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateInvoiceWorkOrders($input: UpdateInvoiceWorkOrdersInput!) {\n\t\tupdateInvoiceWorkOrders(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateInvoiceQuote($input: UpdateInvoiceQuoteInput!) {\n\t\tupdateInvoiceQuote(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateInvoiceQuote($input: UpdateInvoiceQuoteInput!) {\n\t\tupdateInvoiceQuote(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateInvoiceTotal($input: UpdateInvoiceTotalInput!) {\n\t\tupdateInvoiceTotal(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateInvoiceTotal($input: UpdateInvoiceTotalInput!) {\n\t\tupdateInvoiceTotal(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateInvoiceCharged($input: UpdateInvoiceChargedInput!) {\n\t\tupdateInvoiceCharged(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateInvoiceCharged($input: UpdateInvoiceChargedInput!) {\n\t\tupdateInvoiceCharged(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation UpdateInvoicePaid($input: UpdateInvoicePaidInput!) {\n\t\tupdateInvoicePaid(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdateInvoicePaid($input: UpdateInvoicePaidInput!) {\n\t\tupdateInvoicePaid(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation deleteInvoice($input: RemoveInvoiceInput!) {\n\t\tdeleteInvoice(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation deleteInvoice($input: RemoveInvoiceInput!) {\n\t\tdeleteInvoice(input: $input) {\n\t\t\t_id\n\t\t\tdate\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tmutation DeleteS3Objects($input: DeleteS3ObjectInput!) {\n\t\tdeleteS3Objects(input: $input) {\n\t\t\tstatus\n\t\t\tmessage\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation DeleteS3Objects($input: DeleteS3ObjectInput!) {\n\t\tdeleteS3Objects(input: $input) {\n\t\t\tstatus\n\t\t\tmessage\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetAllUsers {\n\t\tgetAllUsers {\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tusername\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GetAllUsers {\n\t\tgetAllUsers {\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tusername\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery QueryCustomers {\n\t\tqueryCustomers {\n\t\t\t_id\n\t\t\tcreatedAt\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tphone\n\t\t\tbusinessName\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\t# date\n\t\t\t\t# type\n\t\t\t\t# charged\n\t\t\t\t# paid\n\t\t\t}\n\t\t\tinvoices {\n\t\t\t\t_id\n\t\t\t}\n\t\t\tproperties {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery QueryCustomers {\n\t\tqueryCustomers {\n\t\t\t_id\n\t\t\tcreatedAt\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tphone\n\t\t\tbusinessName\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\t# date\n\t\t\t\t# type\n\t\t\t\t# charged\n\t\t\t\t# paid\n\t\t\t}\n\t\t\tinvoices {\n\t\t\t\t_id\n\t\t\t}\n\t\t\tproperties {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery QueryCustomerById($customerId: ID!) {\n\t\tqueryCustomerById(customerId: $customerId) {\n\t\t\t_id\n\t\t\tcreatedAt\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tphone\n\t\t\tbusinessName\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\tdate\n\t\t\t\tpropertyId {\n\t\t\t\t\t_id\n\t\t\t\t\tpropertyName\n\t\t\t\t\tpropertyAddress {\n\t\t\t\t\t\tstreet\n\t\t\t\t\t\tcity\n\t\t\t\t\t\tstate\n\t\t\t\t\t\tzip\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttype\n\t\t\t\tcharged\n\t\t\t\tpaid\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery QueryCustomerById($customerId: ID!) {\n\t\tqueryCustomerById(customerId: $customerId) {\n\t\t\t_id\n\t\t\tcreatedAt\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tphone\n\t\t\tbusinessName\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\tdate\n\t\t\t\tpropertyId {\n\t\t\t\t\t_id\n\t\t\t\t\tpropertyName\n\t\t\t\t\tpropertyAddress {\n\t\t\t\t\t\tstreet\n\t\t\t\t\t\tcity\n\t\t\t\t\t\tstate\n\t\t\t\t\t\tzip\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttype\n\t\t\t\tcharged\n\t\t\t\tpaid\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery QueryProperties {\n\t\tqueryProperties {\n\t\t\t_id\n\t\t\tpropertyName\n\t\t\tpropertyAddress {\n\t\t\t\tstreet\n\t\t\t\tcity\n\t\t\t\tstate\n\t\t\t\tzip\n\t\t\t}\n\t\t\tpropertyDescription\n\t\t\tagent {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tphone\n\t\t\t}\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery QueryProperties {\n\t\tqueryProperties {\n\t\t\t_id\n\t\t\tpropertyName\n\t\t\tpropertyAddress {\n\t\t\t\tstreet\n\t\t\t\tcity\n\t\t\t\tstate\n\t\t\t\tzip\n\t\t\t}\n\t\t\tpropertyDescription\n\t\t\tagent {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tphone\n\t\t\t}\n\t\t\t# s3FolderKey\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery QueryPropertyById($propertyId: ID!) {\n\t\tqueryPropertyById(propertyId: $propertyId) {\n\t\t\t_id\n\t\t\tpropertyName\n\t\t\tpropertyAddress {\n\t\t\t\tstreet\n\t\t\t\tcity\n\t\t\t\tstate\n\t\t\t\tzip\n\t\t\t}\n\t\t\tpropertyDescription\n\t\t\tagent {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tphone\n\t\t\t}\n\t\t\ts3FolderKey\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery QueryPropertyById($propertyId: ID!) {\n\t\tqueryPropertyById(propertyId: $propertyId) {\n\t\t\t_id\n\t\t\tpropertyName\n\t\t\tpropertyAddress {\n\t\t\t\tstreet\n\t\t\t\tcity\n\t\t\t\tstate\n\t\t\t\tzip\n\t\t\t}\n\t\t\tpropertyDescription\n\t\t\tagent {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\tphone\n\t\t\t}\n\t\t\ts3FolderKey\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery QueryWorkOrders {\n\t\tqueryWorkOrders {\n\t\t\t_id\n\t\t\tinvoices {\n\t\t\t\t_id\n\t\t\t}\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t}\n\t\t\tcharged\n\t\t\tcomments\n\t\t\tcompletedBy\n\t\t\tdate\n\t\t\tdescription\n\t\t\tlastUpdated\n\t\t\tpaid\n\t\t\tquote\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t\tpropertyAddress {\n\t\t\t\t\tstreet\n\t\t\t\t\tcity\n\t\t\t\t\tstate\n\t\t\t\t\tzip\n\t\t\t\t}\n\n\t\t\t}\n\t\t\ttotal\n\t\t\ttype\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery QueryWorkOrders {\n\t\tqueryWorkOrders {\n\t\t\t_id\n\t\t\tinvoices {\n\t\t\t\t_id\n\t\t\t}\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t}\n\t\t\tcharged\n\t\t\tcomments\n\t\t\tcompletedBy\n\t\t\tdate\n\t\t\tdescription\n\t\t\tlastUpdated\n\t\t\tpaid\n\t\t\tquote\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t\tpropertyAddress {\n\t\t\t\t\tstreet\n\t\t\t\t\tcity\n\t\t\t\t\tstate\n\t\t\t\t\tzip\n\t\t\t\t}\n\n\t\t\t}\n\t\t\ttotal\n\t\t\ttype\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery QueryWorkOrderById($workOrderId: ID!) {\n\t\tqueryWorkOrderById(workOrderId: $workOrderId) {\n\t\t\t_id\n\t\t\tdate\n\t\t\tlastUpdated\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t\tpropertyAddress {\n\t\t\t\t\tstreet\n\t\t\t\t\tcity\n\t\t\t\t\tstate\n\t\t\t\t\tzip\n\t\t\t\t}\n\t\t\t\tpropertyDescription\n\t\t\t\tagent {\n\t\t\t\t\t_id\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t\ts3FolderKey\n\t\t\t}\n\t\t\ttype\n\t\t\tdescription\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t\tcomments\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery QueryWorkOrderById($workOrderId: ID!) {\n\t\tqueryWorkOrderById(workOrderId: $workOrderId) {\n\t\t\t_id\n\t\t\tdate\n\t\t\tlastUpdated\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t\tpropertyAddress {\n\t\t\t\t\tstreet\n\t\t\t\t\tcity\n\t\t\t\t\tstate\n\t\t\t\t\tzip\n\t\t\t\t}\n\t\t\t\tpropertyDescription\n\t\t\t\tagent {\n\t\t\t\t\t_id\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t\ts3FolderKey\n\t\t\t}\n\t\t\ttype\n\t\t\tdescription\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t\tcomments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery QueryWorkOrdersByCustomer($customerId: ID!) {\n\t\tqueryWorkOrdersByCustomer(customerId: $customerId) {\n\t\t\t_id\n\t\t\tdate\n\t\t\tlastUpdated\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t\tpropertyAddress {\n\t\t\t\t\tstreet\n\t\t\t\t\tcity\n\t\t\t\t\tstate\n\t\t\t\t\tzip\n\t\t\t\t}\n\t\t\t\tpropertyDescription\n\t\t\t\tagent {\n\t\t\t\t\t_id\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t\ts3FolderKey\n\t\t\t}\n\t\t\ttype\n\t\t\tdescription\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t\tcomments\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery QueryWorkOrdersByCustomer($customerId: ID!) {\n\t\tqueryWorkOrdersByCustomer(customerId: $customerId) {\n\t\t\t_id\n\t\t\tdate\n\t\t\tlastUpdated\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t\tpropertyAddress {\n\t\t\t\t\tstreet\n\t\t\t\t\tcity\n\t\t\t\t\tstate\n\t\t\t\t\tzip\n\t\t\t\t}\n\t\t\t\tpropertyDescription\n\t\t\t\tagent {\n\t\t\t\t\t_id\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t\ts3FolderKey\n\t\t\t}\n\t\t\ttype\n\t\t\tdescription\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t\tcomments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery QueryWorkOrdersByProperty($propertyId: ID!) {\n\t\tqueryWorkOrdersByProperty(propertyId: $propertyId) {\n\t\t\t_id\n\t\t\tdate\n\t\t\tlastUpdated\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t\tpropertyAddress {\n\t\t\t\t\tstreet\n\t\t\t\t\tcity\n\t\t\t\t\tstate\n\t\t\t\t\tzip\n\t\t\t\t}\n\t\t\t\tpropertyDescription\n\t\t\t\tagent {\n\t\t\t\t\t_id\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t\ts3FolderKey\n\t\t\t}\n\t\t\ttype\n\t\t\tdescription\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t\tcomments\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery QueryWorkOrdersByProperty($propertyId: ID!) {\n\t\tqueryWorkOrdersByProperty(propertyId: $propertyId) {\n\t\t\t_id\n\t\t\tdate\n\t\t\tlastUpdated\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tpropertyId {\n\t\t\t\t_id\n\t\t\t\tpropertyName\n\t\t\t\tpropertyAddress {\n\t\t\t\t\tstreet\n\t\t\t\t\tcity\n\t\t\t\t\tstate\n\t\t\t\t\tzip\n\t\t\t\t}\n\t\t\t\tpropertyDescription\n\t\t\t\tagent {\n\t\t\t\t\t_id\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t\t\tphone\n\t\t\t\t}\n\t\t\t\ts3FolderKey\n\t\t\t}\n\t\t\ttype\n\t\t\tdescription\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t\tcomments\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery QueryInvoices {\n\t\tqueryInvoices {\n\t\t\t_id\n\t\t\tinvoiceNumber\n\t\t\tdate\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\t# firstName\n\t\t\t\t# lastName\n\t\t\t\t# email\n\t\t\t\t# phone\n\t\t\t\t# businessName\n\t\t\t}\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\t# date\n\t\t\t\t# type\n\t\t\t}\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery QueryInvoices {\n\t\tqueryInvoices {\n\t\t\t_id\n\t\t\tinvoiceNumber\n\t\t\tdate\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\t# firstName\n\t\t\t\t# lastName\n\t\t\t\t# email\n\t\t\t\t# phone\n\t\t\t\t# businessName\n\t\t\t}\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\t# date\n\t\t\t\t# type\n\t\t\t}\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery QueryInvoiceById($invoiceId: ID!) {\n\t\tqueryInvoiceById(invoiceId: $invoiceId) {\n\t\t\t_id\n\t\t\tinvoiceNumber\n\t\t\tdate\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\tdate\n\t\t\t\ttype\n\t\t\t}\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery QueryInvoiceById($invoiceId: ID!) {\n\t\tqueryInvoiceById(invoiceId: $invoiceId) {\n\t\t\t_id\n\t\t\tinvoiceNumber\n\t\t\tdate\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\tdate\n\t\t\t\ttype\n\t\t\t}\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery QueryInvoicesByCustomer($customerId: ID!) {\n\t\tqueryInvoicesByCustomer(customerId: $customerId) {\n\t\t\t_id\n\t\t\tinvoiceNumber\n\t\t\tdate\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\tdate\n\t\t\t\ttype\n\t\t\t}\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery QueryInvoicesByCustomer($customerId: ID!) {\n\t\tqueryInvoicesByCustomer(customerId: $customerId) {\n\t\t\t_id\n\t\t\tinvoiceNumber\n\t\t\tdate\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\tdate\n\t\t\t\ttype\n\t\t\t}\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery QueryInvoicesByWorkOrder($workOrderId: ID!) {\n\t\tqueryInvoicesByWorkOrder(workOrderId: $workOrderId) {\n\t\t\t_id\n\t\t\tinvoiceNumber\n\t\t\tdate\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\tdate\n\t\t\t\ttype\n\t\t\t}\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery QueryInvoicesByWorkOrder($workOrderId: ID!) {\n\t\tqueryInvoicesByWorkOrder(workOrderId: $workOrderId) {\n\t\t\t_id\n\t\t\tinvoiceNumber\n\t\t\tdate\n\t\t\tcustomerId {\n\t\t\t\t_id\n\t\t\t\tfirstName\n\t\t\t\tlastName\n\t\t\t\temail\n\t\t\t\tphone\n\t\t\t\tbusinessName\n\t\t\t}\n\t\t\tworkOrders {\n\t\t\t\t_id\n\t\t\t\tdate\n\t\t\t\ttype\n\t\t\t}\n\t\t\tquote\n\t\t\ttotal\n\t\t\tcharged\n\t\t\tpaid\n\t\t}\n\t}\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n\tquery GetPresignedS3Url($imgKey: String!, $commandType: String!, $altTag: String!) {\n\t\tgetPresignedS3Url(imgKey: $imgKey, commandType: $commandType, altTag: $altTag)\n\t}\n"): (typeof documents)["\n\tquery GetPresignedS3Url($imgKey: String!, $commandType: String!, $altTag: String!) {\n\t\tgetPresignedS3Url(imgKey: $imgKey, commandType: $commandType, altTag: $altTag)\n\t}\n"];

export function gql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;